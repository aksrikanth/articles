-# Thu 19 Mar 2009
%p
  I've just updated rails to the newly released 2.3.2, and deployed it using passenger (mod_rails) 2.1.2.
  However there was a problem with the routing of static files.
  I use static
  = link_to 'haml', 'http://haml.hamptoncatlin.com/'
  files to serve the static content on the site like my
  = link_to 'code', code_path
  and
  = link_to 'publications', publications_path
  pages.

%p
  Initially I was just using a regular resource route to serve static content:

%pre
  :preserve
    map.resources :static, :controller => 'static_files'

%p
  This worked with mongrel while developing, but it didn't work with passenger and apache. Passing numerical parameters to the static controller worked, but string arguments got 404 responses from apache. I guess passenger registers paths with numeric ids by default. The next thing I tried was using a named path:

%pre
  :preserve
    map.static 'static/*path', :controller => 'static_files', :action => 'show'

%p
  This failed to work entirely. I haven't managed to figure out why, but the
  %code params[:path]
  variable was not set correctly or something.

%p
  Finally I found a
  = link_to 'blog post', 'http://snafu.diarrhea.ch/blog/article/4-serving-static-content-with-rails'
  that detailed an approach that worked. The route looked like:

%pre
  :preserve
    map.connect '*path', :controller => 'static_files'

%p
  That seemed to work, but I had to manually type out the full path for each static file, and that seemed tedious. One of the bigger advantages of routes in rails is that you can use routing helpers like
  %code code_path
  without having to resort to string urls.

%p
  I solved the problem by adding some paths to routes.rb:

%pre
  :preserve
    map.connect '*path', :controller => 'static_files'
    map.code '/code', :controller => 'static_files'
    map.publications '/publications', :controller => 'static_files'

%p
  These routes are never used for route resolution since the *path rule is more general and appears first. However it does generate the routing helpers and I can live with that hack for now.
